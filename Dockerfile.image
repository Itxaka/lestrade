# ARGS go first if used on FROM
ARG TOOL_IMAGE=quay.io/costoolkit/elemental-cli-ci:latest
# Binaries and files needed from elemental-toolkit repository
ARG LUET_VERSION=0.32.5
FROM quay.io/luet/base:$LUET_VERSION AS framework-build
COPY framework/files/etc/luet/luet.yaml /etc/luet/luet.yaml
ENV LUET_NOLOCK=true
SHELL ["/usr/bin/luet", "install", "-y", "--system-target", "/framework"]

# elemental-toolkit essentials
RUN system/immutable-rootfs
RUN system/cos-setup
RUN cloud-config/network
RUN cloud-config/recovery
RUN cloud-config/live
RUN cloud-config/boot-assessment
RUN cloud-config/default-services
RUN system/grub2-config
RUN system/base-dracut-modules

# elemental-toolkit utilities
RUN utils/k9s
RUN utils/helm
RUN selinux/rancher
RUN selinux/k3s


FROM $TOOL_IMAGE as elemental-cli


# Base os
FROM registry.suse.com/suse/sle-micro-rancher/5.3:latest as default

# Copy installed files from the luet repos
COPY --from=framework-build /framework /
# Copy elemental
COPY --from=elemental-cli /usr/bin/elemental /usr/bin/elemental

# Copy local framework files
COPY framework/files/ /

# Enable services
RUN systemctl enable NetworkManager sshd

ARG IMAGE_TAG=latest
ARG IMAGE_COMMIT=""
ARG IMAGE_REPO=norepo
RUN echo VERSION=\"${IMAGE_TAG}\" >> /etc/os-release
RUN echo VERSION_ID=\"$(echo ${IMAGE_TAG} | sed s/^v//)\" >> /etc/os-release
RUN echo COMMIT=\"${IMAGE_COMMIT}\" >> /etc/os-release
RUN echo IMAGE_REPO=\"${IMAGE_REPO}\" >> /etc/os-release
RUN echo IMAGE_TAG=\"${IMAGE_TAG}\" >> /etc/os-release
RUN echo IMAGE=\"${IMAGE_REPO}:${IMAGE_TAG}\" >> /etc/os-release
RUN echo GRUB_ENTRY_NAME=\"Watson\" >> /etc/os-release

# Rebuild initrd to setup dracut with the boot configurations
RUN mkinitrd && \
    # aarch64 has an uncompressed kernel so we need to link it to vmlinuz
    kernel=$(ls /boot/Image-* | head -n1) && \
    if [ -e "$kernel" ]; then ln -sf "${kernel#/boot/}" /boot/vmlinuz; fi

# Save some space
RUN rm -rf /var/log/update* && \
    >/var/log/lastlog && \
    rm -rf /boot/vmlinux*
